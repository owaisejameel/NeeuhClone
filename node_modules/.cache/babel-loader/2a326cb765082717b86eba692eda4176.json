{"ast":null,"code":"var _jsxFileName = \"/home/protons/Documents/Projects/NeeuhClone/src/Formik/youtubeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Button, makeStyles, TextField } from \"@material-ui/core\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport { TwitterPicker, CirclePicker } from \"react-color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: \"owais\",\n  email: \"\",\n  channel: \"\"\n};\n\nconst onSubmit = values => {\n  console.log(\"formDATA\", values);\n}; //we stick to validationSchema\n\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Required!\"),\n  email: Yup.string().email(\"invalid email\").required(\"Required\"),\n  channel: Yup.string().required(\"Required !\")\n});\nexport const YoutubeForm = () => {\n  _s();\n\n  const classes = myStyle();\n  const [backgroundPicker, setBackgroundPicker] = useState(\"#fff\");\n\n  const handleChangeComplete = color => {\n    console.log(\"colorpciker\", color);\n    ;\n    setBackgroundPicker(color.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      className: classes.mainDiv,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        style: {\n          gap: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"YouTube Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          onSubmit: onSubmit,\n          validationSchema: validationSchema,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Field // fullWidth\n            , {\n              label: \"name\",\n              type: \"text\",\n              name: \"name\",\n              variant: \"outlined\" // {...formik.getFieldProps('name')}\n              // value={formik.values.name}\n              // onChange={formik.handleChange}\n              // onBlur={formik.handleBlur}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              fullWidth: true,\n              label: \"email\",\n              type: \"email\",\n              name: \"email\",\n              variant: \"outlined\" // {...formik.getFieldProps('email')}\n              // value={formik.values.email}\n              // onChange={formik.handleChange}\n              // onBlur={formik.handleBlur}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              fullWidth: true,\n              label: \"channel\",\n              type: \"text\",\n              name: \"channel\",\n              variant: \"outlined\" // value={formik.values.channel}\n              // onChange={formik.handleChange}\n              // onBlur={formik.handleBlur}\n              // {...formik.getFieldProps('channel')}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"channel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              variant: \"contained\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TwitterPicker, {\n          onChangeComplete: handleChangeComplete,\n          colors: [\"#4D4D4D\", \"#999999\", \"#F44E3B\", \"#FE9200\", \"#FCDC00\", \"#DBDF00\", \"#A4DD00\", \"#68CCCA\", \"#73D8FF\", \"#AEA1FF\", \"#FDA1FF\", \"#333333\", \"#808080\", \"#cccccc\", \"#D33115\", \"#E27300\", \"#FCC400\", \"#B0BC00\", \"#68BC00\", \"#16A5A5\", \"#009CE0\", \"#7B64FF\", \"#FA28FF\", \"#000000\", \"#666666\", \"#B3B3B3\", \"#9F0500\", \"#C45100\", \"#FB9E00\", \"#808900\", \"#194D33\", \"#0C797D\", \"#0062B1\", \"#653294\", \"#AB149E\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          height: \"300px\",\n          width: \"300px\",\n          background: backgroundPicker\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(YoutubeForm, \"4X+tYI6FnFnPg/pkCnZKYI66iDk=\");\n\n_c = YoutubeForm;\nconst myStyle = makeStyles({\n  mainDiv: {\n    border: \"1px solid black\",\n    height: \"100vh\",\n    width: \"100vw\"\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeForm\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","ErrorMessage","Button","makeStyles","TextField","Grid","Typography","Yup","TwitterPicker","CirclePicker","initialValues","name","email","channel","onSubmit","values","console","log","validationSchema","object","string","required","YoutubeForm","classes","myStyle","backgroundPicker","setBackgroundPicker","handleChangeComplete","color","hex","mainDiv","gap","display","flexDirection","height","width","background","border"],"sources":["/home/protons/Documents/Projects/NeeuhClone/src/Formik/youtubeForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Button, makeStyles, TextField } from \"@material-ui/core\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\n\nimport { TwitterPicker, CirclePicker } from \"react-color\";\n\nconst initialValues = {\n  name: \"owais\",\n  email: \"\",\n  channel: \"\",\n};\n\nconst onSubmit = (values) => {\n  console.log(\"formDATA\", values);\n};\n//we stick to validationSchema\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Required!\"),\n  email: Yup.string().email(\"invalid email\").required(\"Required\"),\n  channel: Yup.string().required(\"Required !\"),\n});\nexport const YoutubeForm = () => {\n  const classes = myStyle();\n  const [backgroundPicker, setBackgroundPicker] = useState(\"#fff\");\n\n  const handleChangeComplete = (color) => {\n    console.log(\"colorpciker\",color);;\n    setBackgroundPicker(color.hex);\n  };\n\n  return (\n    <>\n      <Grid container justifyContent=\"center\" className={classes.mainDiv}>\n        <Grid\n          item\n          xs={12}\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          style={{ gap: \"50px\" }}\n        >\n          <Typography variant=\"h5\">YouTube Form</Typography>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validationSchema={validationSchema}\n          >\n            <Form\n              style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}\n            >\n              <Field\n                // fullWidth\n                label=\"name\"\n                type=\"text\"\n                name=\"name\"\n                variant=\"outlined\"\n                // {...formik.getFieldProps('name')}\n                // value={formik.values.name}\n                // onChange={formik.handleChange}\n                // onBlur={formik.handleBlur}\n              />\n              <ErrorMessage name=\"name\" />\n              {/* {formik.touched.name && formik.errors.name ? (\n              <Grid item style={{ color: \"red\" }}>\n                {formik.errors.name}\n              </Grid>\n            ) : (\n              <></>\n            )} */}\n              <Field\n                fullWidth\n                label=\"email\"\n                type=\"email\"\n                name=\"email\"\n                variant=\"outlined\"\n                // {...formik.getFieldProps('email')}\n                // value={formik.values.email}\n                // onChange={formik.handleChange}\n                // onBlur={formik.handleBlur}\n              />\n              <ErrorMessage name=\"email\" />\n\n              {/* {formik.touched.email && formik.errors.email ? (\n              <Grid item style={{ color: \"red\" }}>\n                {formik.errors.email}\n              </Grid>\n            ) : (\n              <></>\n            )} */}\n\n              <Field\n                fullWidth\n                label=\"channel\"\n                type=\"text\"\n                name=\"channel\"\n                variant=\"outlined\"\n                // value={formik.values.channel}\n                // onChange={formik.handleChange}\n                // onBlur={formik.handleBlur}\n                // {...formik.getFieldProps('channel')}\n              />\n              <ErrorMessage name=\"channel\" />\n              {/* {formik.touched.channel && formik.errors.channel ? (\n              <Grid item style={{ color: \"red\" }}>\n                {formik.errors.channel}\n              </Grid>\n            ) : (\n              <></>\n            )} */}\n\n              <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n                Submit\n              </Button>\n            </Form>\n          </Formik>\n        </Grid>\n        <Grid container>\n          {/* <Typography>{JSON.stringify(formik.values)}</Typography> */}\n        </Grid>\n        <Grid item>\n          <TwitterPicker\n            onChangeComplete={handleChangeComplete}\n            colors={[\n              \"#4D4D4D\",\n              \"#999999\",\n              \"#F44E3B\",\n              \"#FE9200\",\n              \"#FCDC00\",\n              \"#DBDF00\",\n              \"#A4DD00\",\n              \"#68CCCA\",\n              \"#73D8FF\",\n              \"#AEA1FF\",\n              \"#FDA1FF\",\n              \"#333333\",\n              \"#808080\",\n              \"#cccccc\",\n              \"#D33115\",\n              \"#E27300\",\n              \"#FCC400\",\n              \"#B0BC00\",\n              \"#68BC00\",\n              \"#16A5A5\",\n              \"#009CE0\",\n              \"#7B64FF\",\n              \"#FA28FF\",\n              \"#000000\",\n              \"#666666\",\n              \"#B3B3B3\",\n              \"#9F0500\",\n              \"#C45100\",\n              \"#FB9E00\",\n              \"#808900\",\n              \"#194D33\",\n              \"#0C797D\",\n              \"#0062B1\",\n              \"#653294\",\n              \"#AB149E\",\n            ]}\n          />\n        </Grid>\n\n    <Grid item style={{height: \"300px\", width: \"300px\", background: backgroundPicker }}></Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst myStyle = makeStyles({\n  mainDiv: {\n    border: \"1px solid black\",\n    height: \"100vh\",\n    width: \"100vw\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}